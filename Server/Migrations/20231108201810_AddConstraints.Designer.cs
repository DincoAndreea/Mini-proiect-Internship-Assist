// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeApp.Server.Data;

#nullable disable

namespace RecipeApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231108201810_AddConstraints")]
    partial class AddConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeApp.Shared.Cookbook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cookbooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fall Recipes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Summer Recipes"
                        });
                });

            modelBuilder.Entity("RecipeApp.Shared.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredientNoteId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientNoteId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecipeApp.Shared.IngredientNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientNotes");
                });

            modelBuilder.Entity("RecipeApp.Shared.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("RecipeApp.Shared.NutritionFacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Calories")
                        .HasColumnType("real");

                    b.Property<float>("Carbs")
                        .HasColumnType("real");

                    b.Property<float>("Fat")
                        .HasColumnType("real");

                    b.Property<float>("Protein")
                        .HasColumnType("real");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("NutritionFacts");
                });

            modelBuilder.Entity("RecipeApp.Shared.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdditionalTime")
                        .HasColumnType("int");

                    b.Property<int?>("CookTime")
                        .HasColumnType("int");

                    b.Property<int>("CookbookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.Property<string>("Yield")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CookbookId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalTime = 40,
                            CookTime = 45,
                            CookbookId = 1,
                            Description = "This apple cranberry pie is one of our favorite pies to make for Thanksgiving or the holidays! Flaky buttery crust, spiced apples mixed with dried cranberries and brandy.",
                            Image = "https://www.simplyrecipes.com/thmb/ld2o-VISLJKTwF8PN_6Q7x4DkOw=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/__opt__aboutcom__coeus__resources__content_migration__simply_recipes__uploads__2005__11__apple-cranberry-pie-vertical-b-1800-64e0a7c2cef64f89b30490f5b25679ca.jpg",
                            Note = "As you peel, core, and slice the apples, put the apple slices in a bowl and sprinkle with a little lemon juice or apple cider vinegar to prevent them from discoloring.",
                            PrepTime = 30,
                            Servings = 8,
                            Title = "Apple Pie",
                            TotalTime = 115,
                            Yield = "1 pie"
                        },
                        new
                        {
                            Id = 2,
                            CookTime = 15,
                            CookbookId = 2,
                            Description = "This Cold Rice Noodle Salad tosses cool, slick rice noodles with crisp shredded vegetables and a savory sesame dressing for the perfect summer salad. ",
                            Image = "https://www.simplyrecipes.com/thmb/nokA3G2XT3G6t3QN79T3-pbdzQI=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/Simply-Redipes-Cold-Noodle-Salad-LEAD-6-c95c84f15e6947219ca26f40a49ee691.jpg",
                            PrepTime = 40,
                            Servings = 2,
                            Title = "Cold Rice Noodle Salad",
                            TotalTime = 55,
                            Yield = "1 salad"
                        });
                });

            modelBuilder.Entity("RecipeApp.Shared.Ingredient", b =>
                {
                    b.HasOne("RecipeApp.Shared.IngredientNote", "IngredientNote")
                        .WithMany()
                        .HasForeignKey("IngredientNoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RecipeApp.Shared.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IngredientNote");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp.Shared.IngredientNote", b =>
                {
                    b.HasOne("RecipeApp.Shared.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp.Shared.Instruction", b =>
                {
                    b.HasOne("RecipeApp.Shared.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp.Shared.NutritionFacts", b =>
                {
                    b.HasOne("RecipeApp.Shared.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeApp.Shared.Recipe", b =>
                {
                    b.HasOne("RecipeApp.Shared.Cookbook", "Cookbook")
                        .WithMany()
                        .HasForeignKey("CookbookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cookbook");
                });
#pragma warning restore 612, 618
        }
    }
}
